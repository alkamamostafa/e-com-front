{"ast":null,"code":"import { setPerfume, setPerfumeByQuery, setPerfumeError, setPerfumeLoadingState, setReviews } from \"./perfume-actions\";\nimport { getPerfumeByQuery } from \"../../utils/graphql-query/perfume-query\";\nimport RequestService from \"../../utils/request-service\";\nimport { PERFUMES, PERFUMES_GRAPHQL_PERFUME, PERFUMES_REVIEWS } from \"../../constants/urlConstants\";\nimport { LoadingStatus } from \"../../types/types\";\nexport const fetchPerfume = perfumeId => async dispatch => {\n  try {\n    dispatch(setPerfumeLoadingState(LoadingStatus.LOADING));\n    const response = await RequestService.get(`${PERFUMES}/${perfumeId}`);\n    dispatch(setPerfume(response.data));\n  } catch (error) {\n    dispatch(setPerfumeError(error.response.data));\n  }\n};\nexport const fetchReviewsByPerfumeId = perfumeId => async dispatch => {\n  const response = await RequestService.get(`${PERFUMES_REVIEWS}/${perfumeId}`);\n  dispatch(setReviews(response.data));\n}; // GraphQL thunks\n\nexport const fetchPerfumeByQuery = perfumeId => async dispatch => {\n  try {\n    dispatch(setPerfumeLoadingState(LoadingStatus.LOADING));\n    const response = await RequestService.post(PERFUMES_GRAPHQL_PERFUME, {\n      query: getPerfumeByQuery(perfumeId)\n    });\n    dispatch(setPerfumeByQuery(response.data.data.perfume));\n  } catch (error) {\n    dispatch(setPerfumeError(error.response.data));\n  }\n};","map":{"version":3,"names":["setPerfume","setPerfumeByQuery","setPerfumeError","setPerfumeLoadingState","setReviews","getPerfumeByQuery","RequestService","PERFUMES","PERFUMES_GRAPHQL_PERFUME","PERFUMES_REVIEWS","LoadingStatus","fetchPerfume","perfumeId","dispatch","LOADING","response","get","data","error","fetchReviewsByPerfumeId","fetchPerfumeByQuery","post","query","perfume"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/redux/perfume/perfume-thunks.ts"],"sourcesContent":["import { Dispatch } from \"redux\";\r\n\r\nimport { setPerfume, setPerfumeByQuery, setPerfumeError, setPerfumeLoadingState, setReviews } from \"./perfume-actions\";\r\nimport { getPerfumeByQuery } from \"../../utils/graphql-query/perfume-query\";\r\nimport RequestService from \"../../utils/request-service\";\r\nimport { PERFUMES, PERFUMES_GRAPHQL_PERFUME, PERFUMES_REVIEWS } from \"../../constants/urlConstants\";\r\nimport { LoadingStatus } from \"../../types/types\";\r\n\r\nexport const fetchPerfume = (perfumeId: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setPerfumeLoadingState(LoadingStatus.LOADING));\r\n        const response = await RequestService.get(`${PERFUMES}/${perfumeId}`);\r\n        dispatch(setPerfume(response.data));\r\n    } catch (error) {\r\n        dispatch(setPerfumeError(error.response.data));\r\n    }\r\n};\r\n\r\nexport const fetchReviewsByPerfumeId = (perfumeId: string) => async (dispatch: Dispatch) => {\r\n    const response = await RequestService.get(`${PERFUMES_REVIEWS}/${perfumeId}`);\r\n    dispatch(setReviews(response.data));\r\n};\r\n\r\n// GraphQL thunks\r\nexport const fetchPerfumeByQuery = (perfumeId: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setPerfumeLoadingState(LoadingStatus.LOADING));\r\n        const response = await RequestService.post(PERFUMES_GRAPHQL_PERFUME, { query: getPerfumeByQuery(perfumeId) });\r\n        dispatch(setPerfumeByQuery(response.data.data.perfume));\r\n    } catch (error) {\r\n        dispatch(setPerfumeError(error.response.data));\r\n    }\r\n};\r\n"],"mappings":"AAEA,SAASA,UAAT,EAAqBC,iBAArB,EAAwCC,eAAxC,EAAyDC,sBAAzD,EAAiFC,UAAjF,QAAmG,mBAAnG;AACA,SAASC,iBAAT,QAAkC,yCAAlC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,QAAT,EAAmBC,wBAAnB,EAA6CC,gBAA7C,QAAqE,8BAArE;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAuB,MAAOC,QAAP,IAA8B;EAC7E,IAAI;IACAA,QAAQ,CAACV,sBAAsB,CAACO,aAAa,CAACI,OAAf,CAAvB,CAAR;IACA,MAAMC,QAAQ,GAAG,MAAMT,cAAc,CAACU,GAAf,CAAoB,GAAET,QAAS,IAAGK,SAAU,EAA5C,CAAvB;IACAC,QAAQ,CAACb,UAAU,CAACe,QAAQ,CAACE,IAAV,CAAX,CAAR;EACH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZL,QAAQ,CAACX,eAAe,CAACgB,KAAK,CAACH,QAAN,CAAeE,IAAhB,CAAhB,CAAR;EACH;AACJ,CARM;AAUP,OAAO,MAAME,uBAAuB,GAAIP,SAAD,IAAuB,MAAOC,QAAP,IAA8B;EACxF,MAAME,QAAQ,GAAG,MAAMT,cAAc,CAACU,GAAf,CAAoB,GAAEP,gBAAiB,IAAGG,SAAU,EAApD,CAAvB;EACAC,QAAQ,CAACT,UAAU,CAACW,QAAQ,CAACE,IAAV,CAAX,CAAR;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMG,mBAAmB,GAAIR,SAAD,IAAuB,MAAOC,QAAP,IAA8B;EACpF,IAAI;IACAA,QAAQ,CAACV,sBAAsB,CAACO,aAAa,CAACI,OAAf,CAAvB,CAAR;IACA,MAAMC,QAAQ,GAAG,MAAMT,cAAc,CAACe,IAAf,CAAoBb,wBAApB,EAA8C;MAAEc,KAAK,EAAEjB,iBAAiB,CAACO,SAAD;IAA1B,CAA9C,CAAvB;IACAC,QAAQ,CAACZ,iBAAiB,CAACc,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBM,OAApB,CAAlB,CAAR;EACH,CAJD,CAIE,OAAOL,KAAP,EAAc;IACZL,QAAQ,CAACX,eAAe,CAACgB,KAAK,CAACH,QAAN,CAAeE,IAAhB,CAAhB,CAAR;EACH;AACJ,CARM"},"metadata":{},"sourceType":"module"}