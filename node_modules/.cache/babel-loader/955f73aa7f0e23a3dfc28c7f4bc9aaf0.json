{"ast":null,"code":"import { ACTIVATE_ACCOUNT_FAILURE, ACTIVATE_ACCOUNT_SUCCESS, FORGOT_PASSWORD_FAILURE, FORGOT_PASSWORD_SUCCESS, LOGIN_FAILURE, REGISTER_FAILURE, REGISTER_SUCCESS, RESET_AUTH_STATE, RESET_PASSWORD_CODE_FAILURE, RESET_PASSWORD_CODE_SUCCESS, RESET_PASSWORD_FAILURE, RESET_PASSWORD_SUCCESS, SET_AUTH_LOADING_STATE } from \"./auth-action-types\";\nexport const loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const setAuthLoadingState = status => ({\n  type: SET_AUTH_LOADING_STATE,\n  payload: status\n});\nexport const registerSuccess = () => ({\n  type: REGISTER_SUCCESS\n});\nexport const registerFailure = errors => ({\n  type: REGISTER_FAILURE,\n  payload: errors\n});\nexport const activateAccountSuccess = message => ({\n  type: ACTIVATE_ACCOUNT_SUCCESS,\n  payload: message\n});\nexport const activateAccountFailure = error => ({\n  type: ACTIVATE_ACCOUNT_FAILURE,\n  payload: error\n});\nexport const forgotPasswordSuccess = message => ({\n  type: FORGOT_PASSWORD_SUCCESS,\n  payload: message\n});\nexport const forgotPasswordFailure = error => ({\n  type: FORGOT_PASSWORD_FAILURE,\n  payload: error\n});\nexport const resetPasswordCodeSuccess = email => ({\n  type: RESET_PASSWORD_CODE_SUCCESS,\n  payload: email\n});\nexport const resetPasswordCodeFailure = error => ({\n  type: RESET_PASSWORD_CODE_FAILURE,\n  payload: error\n});\nexport const resetPasswordSuccess = message => ({\n  type: RESET_PASSWORD_SUCCESS,\n  payload: message\n});\nexport const resetPasswordFailure = errors => ({\n  type: RESET_PASSWORD_FAILURE,\n  payload: errors\n});\nexport const resetAuthState = () => ({\n  type: RESET_AUTH_STATE\n});","map":{"version":3,"names":["ACTIVATE_ACCOUNT_FAILURE","ACTIVATE_ACCOUNT_SUCCESS","FORGOT_PASSWORD_FAILURE","FORGOT_PASSWORD_SUCCESS","LOGIN_FAILURE","REGISTER_FAILURE","REGISTER_SUCCESS","RESET_AUTH_STATE","RESET_PASSWORD_CODE_FAILURE","RESET_PASSWORD_CODE_SUCCESS","RESET_PASSWORD_FAILURE","RESET_PASSWORD_SUCCESS","SET_AUTH_LOADING_STATE","loginFailure","error","type","payload","setAuthLoadingState","status","registerSuccess","registerFailure","errors","activateAccountSuccess","message","activateAccountFailure","forgotPasswordSuccess","forgotPasswordFailure","resetPasswordCodeSuccess","email","resetPasswordCodeFailure","resetPasswordSuccess","resetPasswordFailure","resetAuthState"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/redux/auth/auth-actions.ts"],"sourcesContent":["import { AuthErrors, LoadingStatus } from \"../../types/types\";\r\nimport {\r\n    ACTIVATE_ACCOUNT_FAILURE,\r\n    ACTIVATE_ACCOUNT_SUCCESS,\r\n    ActivateAccountFailureActionType,\r\n    ActivateAccountSuccessActionType,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    ForgotPasswordFailureActionType,\r\n    ForgotPasswordSuccessActionType,\r\n    LOGIN_FAILURE,\r\n    LoginFailureActionType,\r\n    REGISTER_FAILURE,\r\n    REGISTER_SUCCESS,\r\n    RegisterFailureActionType,\r\n    RegisterSuccessActionType,\r\n    RESET_AUTH_STATE,\r\n    RESET_PASSWORD_CODE_FAILURE,\r\n    RESET_PASSWORD_CODE_SUCCESS,\r\n    RESET_PASSWORD_FAILURE,\r\n    RESET_PASSWORD_SUCCESS,\r\n    ResetAuthStateActionType,\r\n    ResetPasswordCodeFailureActionType,\r\n    ResetPasswordCodeSuccessActionType,\r\n    ResetPasswordFailureActionType,\r\n    ResetPasswordSuccessActionType,\r\n    SET_AUTH_LOADING_STATE,\r\n    SetAuthLoadingStateActionType\r\n} from \"./auth-action-types\";\r\n\r\nexport const loginFailure = (error: string): LoginFailureActionType => ({\r\n    type: LOGIN_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const setAuthLoadingState = (status: LoadingStatus): SetAuthLoadingStateActionType => ({\r\n    type: SET_AUTH_LOADING_STATE,\r\n    payload: status\r\n});\r\n\r\nexport const registerSuccess = (): RegisterSuccessActionType => ({\r\n    type: REGISTER_SUCCESS\r\n});\r\n\r\nexport const registerFailure = (errors: AuthErrors): RegisterFailureActionType => ({\r\n    type: REGISTER_FAILURE,\r\n    payload: errors\r\n});\r\n\r\nexport const activateAccountSuccess = (message: string): ActivateAccountSuccessActionType => ({\r\n    type: ACTIVATE_ACCOUNT_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const activateAccountFailure = (error: string): ActivateAccountFailureActionType => ({\r\n    type: ACTIVATE_ACCOUNT_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const forgotPasswordSuccess = (message: string): ForgotPasswordSuccessActionType => ({\r\n    type: FORGOT_PASSWORD_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const forgotPasswordFailure = (error: string): ForgotPasswordFailureActionType => ({\r\n    type: FORGOT_PASSWORD_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const resetPasswordCodeSuccess = (email: string): ResetPasswordCodeSuccessActionType => ({\r\n    type: RESET_PASSWORD_CODE_SUCCESS,\r\n    payload: email\r\n});\r\n\r\nexport const resetPasswordCodeFailure = (error: string): ResetPasswordCodeFailureActionType => ({\r\n    type: RESET_PASSWORD_CODE_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const resetPasswordSuccess = (message: string): ResetPasswordSuccessActionType => ({\r\n    type: RESET_PASSWORD_SUCCESS,\r\n    payload: message\r\n});\r\n\r\nexport const resetPasswordFailure = (errors: AuthErrors): ResetPasswordFailureActionType => ({\r\n    type: RESET_PASSWORD_FAILURE,\r\n    payload: errors\r\n});\r\n\r\nexport const resetAuthState = (): ResetAuthStateActionType => ({\r\n    type: RESET_AUTH_STATE\r\n});\r\n"],"mappings":"AACA,SACIA,wBADJ,EAEIC,wBAFJ,EAKIC,uBALJ,EAMIC,uBANJ,EASIC,aATJ,EAWIC,gBAXJ,EAYIC,gBAZJ,EAeIC,gBAfJ,EAgBIC,2BAhBJ,EAiBIC,2BAjBJ,EAkBIC,sBAlBJ,EAmBIC,sBAnBJ,EAyBIC,sBAzBJ,QA2BO,qBA3BP;AA6BA,OAAO,MAAMC,YAAY,GAAIC,KAAD,KAA4C;EACpEC,IAAI,EAAEX,aAD8D;EAEpEY,OAAO,EAAEF;AAF2D,CAA5C,CAArB;AAKP,OAAO,MAAMG,mBAAmB,GAAIC,MAAD,KAA2D;EAC1FH,IAAI,EAAEH,sBADoF;EAE1FI,OAAO,EAAEE;AAFiF,CAA3D,CAA5B;AAKP,OAAO,MAAMC,eAAe,GAAG,OAAkC;EAC7DJ,IAAI,EAAET;AADuD,CAAlC,CAAxB;AAIP,OAAO,MAAMc,eAAe,GAAIC,MAAD,KAAoD;EAC/EN,IAAI,EAAEV,gBADyE;EAE/EW,OAAO,EAAEK;AAFsE,CAApD,CAAxB;AAKP,OAAO,MAAMC,sBAAsB,GAAIC,OAAD,KAAwD;EAC1FR,IAAI,EAAEd,wBADoF;EAE1Fe,OAAO,EAAEO;AAFiF,CAAxD,CAA/B;AAKP,OAAO,MAAMC,sBAAsB,GAAIV,KAAD,KAAsD;EACxFC,IAAI,EAAEf,wBADkF;EAExFgB,OAAO,EAAEF;AAF+E,CAAtD,CAA/B;AAKP,OAAO,MAAMW,qBAAqB,GAAIF,OAAD,KAAuD;EACxFR,IAAI,EAAEZ,uBADkF;EAExFa,OAAO,EAAEO;AAF+E,CAAvD,CAA9B;AAKP,OAAO,MAAMG,qBAAqB,GAAIZ,KAAD,KAAqD;EACtFC,IAAI,EAAEb,uBADgF;EAEtFc,OAAO,EAAEF;AAF6E,CAArD,CAA9B;AAKP,OAAO,MAAMa,wBAAwB,GAAIC,KAAD,KAAwD;EAC5Fb,IAAI,EAAEN,2BADsF;EAE5FO,OAAO,EAAEY;AAFmF,CAAxD,CAAjC;AAKP,OAAO,MAAMC,wBAAwB,GAAIf,KAAD,KAAwD;EAC5FC,IAAI,EAAEP,2BADsF;EAE5FQ,OAAO,EAAEF;AAFmF,CAAxD,CAAjC;AAKP,OAAO,MAAMgB,oBAAoB,GAAIP,OAAD,KAAsD;EACtFR,IAAI,EAAEJ,sBADgF;EAEtFK,OAAO,EAAEO;AAF6E,CAAtD,CAA7B;AAKP,OAAO,MAAMQ,oBAAoB,GAAIV,MAAD,KAAyD;EACzFN,IAAI,EAAEL,sBADmF;EAEzFM,OAAO,EAAEK;AAFgF,CAAzD,CAA7B;AAKP,OAAO,MAAMW,cAAc,GAAG,OAAiC;EAC3DjB,IAAI,EAAER;AADqD,CAAjC,CAAvB"},"metadata":{},"sourceType":"module"}