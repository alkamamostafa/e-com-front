{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALKAMA\\\\Desktop\\\\commerce\\\\ecommerce-spring-reactjs\\\\frontend\\\\src\\\\pages\\\\ResetPassword\\\\ResetPassword.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { faLock, faSync, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchResetPasswordCode, resetPassword } from \"../../redux/auth/auth-thunks\";\nimport InfoTitle from \"../../component/InfoTitle/InfoTitle\";\nimport Alert from \"../../component/Alert/Alert\";\nimport Input from \"../../component/Input/Input\";\nimport IconButton from \"../../component/IconButton/IconButton\";\nimport { selectErrorMessage, selectErrors, selectUserAuthEmail } from \"../../redux/auth/auth-selector\";\nimport { resetAuthState } from \"../../redux/auth/auth-actions\";\nconst initialState = {\n  password: \"\",\n  password2: \"\"\n};\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const history = useHistory();\n  const userEmail = useSelector(selectUserAuthEmail);\n  const error = useSelector(selectErrorMessage);\n  const errors = useSelector(selectErrors);\n  const [passwordData, setPasswordData] = useState(initialState);\n  const {\n    password,\n    password2\n  } = passwordData;\n  useEffect(() => {\n    dispatch(resetAuthState());\n\n    if (params.code) {\n      dispatch(fetchResetPasswordCode(params.code));\n    }\n  }, []);\n\n  const onClickReset = event => {\n    event.preventDefault();\n    const userResetPasswordData = {\n      email: userEmail,\n      password,\n      password2\n    };\n    dispatch(resetPassword(userResetPasswordData, history));\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPasswordData({ ...passwordData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoTitle, {\n    iconClass: \"mr-2\",\n    icon: faSync,\n    title: \"RESET PASSWORD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(Alert, {\n    alertType: \"danger\",\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onClickReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    title: \"Password\",\n    icon: faLock,\n    titleClass: \"col-sm-2\",\n    wrapperClass: \"col-sm-4\",\n    type: \"password\",\n    error: errors.passwordError,\n    name: \"password\",\n    value: password,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    title: \"Confirm password\",\n    icon: faLock,\n    titleClass: \"col-sm-2\",\n    wrapperClass: \"col-sm-4\",\n    type: \"password\",\n    error: errors.password2Error,\n    name: \"password2\",\n    value: password2,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    buttonText: \"Reset\",\n    icon: faUndo,\n    iconClassName: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ResetPassword;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","faLock","faSync","faUndo","fetchResetPasswordCode","resetPassword","InfoTitle","Alert","Input","IconButton","selectErrorMessage","selectErrors","selectUserAuthEmail","resetAuthState","initialState","password","password2","ResetPassword","dispatch","params","history","userEmail","error","errors","passwordData","setPasswordData","code","onClickReset","event","preventDefault","userResetPasswordData","email","handleInputChange","name","value","target","passwordError","password2Error"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/pages/ResetPassword/ResetPassword.tsx"],"sourcesContent":["import React, { ChangeEvent, FC, FormEvent, ReactElement, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { faLock, faSync, faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { fetchResetPasswordCode, resetPassword } from \"../../redux/auth/auth-thunks\";\r\nimport { UserResetPasswordRequest } from \"../../types/types\";\r\nimport InfoTitle from \"../../component/InfoTitle/InfoTitle\";\r\nimport Alert from \"../../component/Alert/Alert\";\r\nimport Input from \"../../component/Input/Input\";\r\nimport IconButton from \"../../component/IconButton/IconButton\";\r\nimport { selectErrorMessage, selectErrors, selectUserAuthEmail } from \"../../redux/auth/auth-selector\";\r\nimport { resetAuthState } from \"../../redux/auth/auth-actions\";\r\n\r\nconst initialState = {\r\n    password: \"\",\r\n    password2: \"\"\r\n};\r\n\r\nconst ResetPassword: FC = (): ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams<{ code: string }>();\r\n    const history = useHistory();\r\n    const userEmail = useSelector(selectUserAuthEmail);\r\n    const error = useSelector(selectErrorMessage);\r\n    const errors = useSelector(selectErrors);\r\n    const [passwordData, setPasswordData] = useState(initialState);\r\n    const { password, password2 } = passwordData;\r\n\r\n    useEffect(() => {\r\n        dispatch(resetAuthState());\r\n\r\n        if (params.code) {\r\n            dispatch(fetchResetPasswordCode(params.code));\r\n        }\r\n    }, []);\r\n\r\n    const onClickReset = (event: FormEvent<HTMLFormElement>): void => {\r\n        event.preventDefault();\r\n        const userResetPasswordData: UserResetPasswordRequest = { email: userEmail, password, password2 };\r\n        dispatch(resetPassword(userResetPasswordData, history));\r\n    };\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        const { name, value } = event.target;\r\n        setPasswordData({ ...passwordData, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <InfoTitle iconClass={\"mr-2\"} icon={faSync} title={\"RESET PASSWORD\"} />\r\n            <hr />\r\n            {error && <Alert alertType={\"danger\"} message={error} />}\r\n            <form onSubmit={onClickReset}>\r\n                <Input\r\n                    title={\"Password\"}\r\n                    icon={faLock}\r\n                    titleClass={\"col-sm-2\"}\r\n                    wrapperClass={\"col-sm-4\"}\r\n                    type={\"password\"}\r\n                    error={errors.passwordError}\r\n                    name={\"password\"}\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input\r\n                    title={\"Confirm password\"}\r\n                    icon={faLock}\r\n                    titleClass={\"col-sm-2\"}\r\n                    wrapperClass={\"col-sm-4\"}\r\n                    type={\"password\"}\r\n                    error={errors.password2Error}\r\n                    name={\"password2\"}\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <IconButton buttonText={\"Reset\"} icon={faUndo} iconClassName={\"mr-3\"} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}