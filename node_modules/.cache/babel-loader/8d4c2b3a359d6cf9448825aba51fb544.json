{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nconst usePagination = _ref => {\n  let {\n    itemsPerPage,\n    data,\n    startFrom\n  } = _ref;\n  const [searching, setSearching] = useState(false);\n  const [filteredData, setFilteredData] = useState(data);\n  const perPage = itemsPerPage ? itemsPerPage : 12;\n  const pages = Math.ceil(filteredData.length / perPage);\n  const pagination = [];\n  const [currentPage, setCurrentPage] = useState(startFrom <= pages ? startFrom : 1);\n  const [slicedData, setSlicedData] = useState([...filteredData].slice((currentPage - 1) * perPage, currentPage * perPage));\n  useEffect(() => {\n    setSlicedData([...filteredData].slice((currentPage - 1) * perPage, currentPage * perPage));\n\n    if (searching) {\n      setCurrentPage(1);\n      setSearching(false);\n    }\n  }, [filteredData, currentPage]);\n  let ellipsisLeft = false;\n  let ellipsisRight = false;\n\n  for (let i = 1; i <= pages; i++) {\n    if (i === currentPage) {\n      pagination.push({\n        id: i,\n        current: true,\n        ellipsis: false\n      });\n    } else {\n      if (i < 2 || i > pages - 1 || i === currentPage - 1 || i === currentPage + 1) {\n        pagination.push({\n          id: i,\n          current: false,\n          ellipsis: false\n        });\n      } else if (i > 1 && i < currentPage && !ellipsisLeft) {\n        pagination.push({\n          id: i,\n          current: false,\n          ellipsis: true\n        });\n        ellipsisLeft = true;\n      } else if (i < pages && i > currentPage && !ellipsisRight) {\n        pagination.push({\n          id: i,\n          current: false,\n          ellipsis: true\n        });\n        ellipsisRight = true;\n      }\n    }\n  }\n\n  const changePage = (page, event) => {\n    event.preventDefault();\n\n    if (page !== currentPage) {\n      setCurrentPage(page);\n      setSlicedData([...filteredData].slice((page - 1) * perPage, page * perPage));\n    }\n  };\n\n  const goToPrevPage = event => {\n    event.preventDefault();\n    setCurrentPage(prevVal => prevVal - 1 === 0 ? prevVal : prevVal - 1);\n\n    if (currentPage !== 1) {\n      setSlicedData([...filteredData].slice((currentPage - 2) * perPage, (currentPage - 1) * perPage));\n    }\n  };\n\n  const goToNextPage = event => {\n    event.preventDefault();\n    setCurrentPage(prevVal => prevVal === pages ? prevVal : prevVal + 1);\n\n    if (currentPage !== pages) {\n      setSlicedData([...filteredData].slice(currentPage * perPage, (currentPage + 1) * perPage));\n    }\n  };\n\n  return {\n    slicedData,\n    pagination,\n    prevPage: goToPrevPage,\n    nextPage: goToNextPage,\n    changePage,\n    setFilteredData,\n    setSearching\n  };\n};\n\nexport default usePagination;","map":{"version":3,"names":["useEffect","useState","usePagination","itemsPerPage","data","startFrom","searching","setSearching","filteredData","setFilteredData","perPage","pages","Math","ceil","length","pagination","currentPage","setCurrentPage","slicedData","setSlicedData","slice","ellipsisLeft","ellipsisRight","i","push","id","current","ellipsis","changePage","page","event","preventDefault","goToPrevPage","prevVal","goToNextPage","prevPage","nextPage"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/component/Pagination/usePagination.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nexport type Pagination = {\r\n    id: number\r\n    current: boolean\r\n    ellipsis: boolean\r\n};\r\n\r\nconst usePagination: ({itemsPerPage, data, startFrom}: { itemsPerPage: number, data: Array<any>, startFrom: any }) => {\r\n    pagination: Array<Pagination>;\r\n    changePage: (page: number, event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\r\n    setFilteredData: (value: (((prevState: Array<any>) => Array<any>) | Array<any>)) => void;\r\n    nextPage: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\r\n    setSearching: (value: (((prevState: boolean) => boolean) | boolean)) => void;\r\n    slicedData: Array<any>;\r\n    prevPage: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void\r\n} = ({itemsPerPage, data, startFrom}) => {\r\n\r\n    const [searching, setSearching] = useState<boolean>(false);\r\n    const [filteredData, setFilteredData] = useState<Array<any>>(data);\r\n    const perPage: number = itemsPerPage ? itemsPerPage : 12;\r\n    const pages: number = Math.ceil(filteredData.length / perPage);\r\n    const pagination: Array<Pagination> = [];\r\n    const [currentPage, setCurrentPage] = useState<number>(startFrom <= pages ? startFrom : 1);\r\n    const [slicedData, setSlicedData] = useState<Array<any>>([...filteredData].slice((currentPage - 1) * perPage, currentPage * perPage));\r\n\r\n    useEffect(() => {\r\n        setSlicedData([...filteredData].slice((currentPage - 1) * perPage, currentPage * perPage));\r\n\r\n        if (searching) {\r\n            setCurrentPage(1);\r\n            setSearching(false);\r\n        }\r\n    }, [filteredData, currentPage]);\r\n\r\n    let ellipsisLeft: boolean = false;\r\n    let ellipsisRight: boolean = false;\r\n\r\n    for (let i = 1; i <= pages; i++) {\r\n        if (i === currentPage) {\r\n            pagination.push(\r\n                {id: i, current: true, ellipsis: false}\r\n            );\r\n        } else {\r\n            if (i < 2 || i > pages - 1 || i === currentPage - 1 || i === currentPage + 1) {\r\n                pagination.push(\r\n                    {id: i, current: false, ellipsis: false}\r\n                );\r\n            } else if (i > 1 && i < currentPage && !ellipsisLeft) {\r\n                pagination.push(\r\n                    {id: i, current: false, ellipsis: true}\r\n                );\r\n                ellipsisLeft = true;\r\n            } else if (i < pages && i > currentPage && !ellipsisRight) {\r\n                pagination.push(\r\n                    {id: i, current: false, ellipsis: true}\r\n                );\r\n                ellipsisRight = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    const changePage = (page: number, event: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\r\n        event.preventDefault();\r\n\r\n        if (page !== currentPage) {\r\n            setCurrentPage(page);\r\n            setSlicedData([...filteredData].slice((page - 1) * perPage, page * perPage));\r\n        }\r\n    };\r\n\r\n    const goToPrevPage = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\r\n        event.preventDefault();\r\n\r\n        setCurrentPage(prevVal => prevVal - 1 === 0 ? prevVal : prevVal - 1);\r\n\r\n        if (currentPage !== 1) {\r\n            setSlicedData([...filteredData].slice((currentPage - 2) * perPage, (currentPage - 1) * perPage));\r\n        }\r\n    };\r\n\r\n    const goToNextPage = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\r\n        event.preventDefault();\r\n\r\n        setCurrentPage(prevVal => prevVal === pages ? prevVal : prevVal + 1);\r\n\r\n        if (currentPage !== pages) {\r\n            setSlicedData([...filteredData].slice(currentPage * perPage, (currentPage + 1) * perPage));\r\n        }\r\n    };\r\n\r\n    return {\r\n        slicedData,\r\n        pagination,\r\n        prevPage: goToPrevPage,\r\n        nextPage: goToNextPage,\r\n        changePage,\r\n        setFilteredData,\r\n        setSearching\r\n    };\r\n};\r\n\r\nexport default usePagination;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}