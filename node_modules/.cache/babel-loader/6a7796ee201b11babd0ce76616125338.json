{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALKAMA\\\\Desktop\\\\commerce\\\\ecommerce-spring-reactjs\\\\frontend\\\\src\\\\pages\\\\Account\\\\ChangePassword\\\\ChangePassword.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { updateUserPassword } from \"../../../redux/user/user-thunks\";\nimport InfoTitle from \"../../../component/InfoTitle/InfoTitle\";\nimport Alert from \"../../../component/Alert/Alert\";\nimport IconButton from \"../../../component/IconButton/IconButton\";\nimport Input from \"../../../component/Input/Input\";\nimport { selectSuccessMessage, selectUserResetPasswordErrors } from \"../../../redux/user/user-selector\";\nimport { resetInputForm } from \"../../../redux/user/user-actions\";\nimport \"./ChangePassword.css\";\nconst initialState = {\n  password: \"\",\n  password2: \"\"\n};\n\nconst ChangePassword = () => {\n  const dispatch = useDispatch();\n  const errors = useSelector(selectUserResetPasswordErrors);\n  const successMessage = useSelector(selectSuccessMessage);\n  const [passwords, setPasswords] = useState(initialState);\n  const {\n    passwordError,\n    password2Error\n  } = errors;\n  const {\n    password,\n    password2\n  } = passwords;\n  useEffect(() => {\n    dispatch(resetInputForm());\n  }, []);\n  useEffect(() => {\n    setPasswords(initialState);\n  }, [successMessage]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const data = {\n      email: \"\",\n      password,\n      password2\n    };\n    dispatch(updateUserPassword(data));\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPasswords({ ...passwords,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"password_reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoTitle, {\n    iconClass: \"mr-2\",\n    icon: faLock,\n    title: \"Change Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), successMessage && /*#__PURE__*/React.createElement(Alert, {\n    alertType: \"success\",\n    message: successMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-5\",\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    title: \"Enter a new password\",\n    titleClass: \"col-sm-3\",\n    wrapperClass: \"col-sm-4\",\n    type: \"password\",\n    error: passwordError,\n    name: \"password\",\n    value: password,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    title: \"Confirm password\",\n    titleClass: \"col-sm-3\",\n    wrapperClass: \"col-sm-4\",\n    type: \"password\",\n    error: password2Error,\n    name: \"password2\",\n    value: password2,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    buttonText: \"Change\",\n    icon: faUndo,\n    iconClassName: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ChangePassword;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","faLock","faUndo","updateUserPassword","InfoTitle","Alert","IconButton","Input","selectSuccessMessage","selectUserResetPasswordErrors","resetInputForm","initialState","password","password2","ChangePassword","dispatch","errors","successMessage","passwords","setPasswords","passwordError","password2Error","onFormSubmit","event","preventDefault","data","email","handleInputChange","name","value","target"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/pages/Account/ChangePassword/ChangePassword.tsx"],"sourcesContent":["import React, { ChangeEvent, FC, FormEvent, ReactElement, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { UserResetPasswordRequest } from \"../../../types/types\";\r\nimport { updateUserPassword } from \"../../../redux/user/user-thunks\";\r\nimport InfoTitle from \"../../../component/InfoTitle/InfoTitle\";\r\nimport Alert from \"../../../component/Alert/Alert\";\r\nimport IconButton from \"../../../component/IconButton/IconButton\";\r\nimport Input from \"../../../component/Input/Input\";\r\nimport { selectSuccessMessage, selectUserResetPasswordErrors } from \"../../../redux/user/user-selector\";\r\nimport { resetInputForm } from \"../../../redux/user/user-actions\";\r\nimport \"./ChangePassword.css\";\r\n\r\nconst initialState = {\r\n    password: \"\",\r\n    password2: \"\"\r\n};\r\n\r\nconst ChangePassword: FC = (): ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const errors = useSelector(selectUserResetPasswordErrors);\r\n    const successMessage = useSelector(selectSuccessMessage);\r\n    const [passwords, setPasswords] = useState(initialState);\r\n    const { passwordError, password2Error } = errors;\r\n    const { password, password2 } = passwords;\r\n\r\n    useEffect(() => {\r\n        dispatch(resetInputForm());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPasswords(initialState);\r\n    }, [successMessage]);\r\n\r\n    const onFormSubmit = (event: FormEvent<HTMLFormElement>): void => {\r\n        event.preventDefault();\r\n        const data: UserResetPasswordRequest = { email: \"\", password, password2 };\r\n        dispatch(updateUserPassword(data));\r\n    };\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        const { name, value } = event.target;\r\n        setPasswords({ ...passwords, [name]: value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"password_reset\">\r\n            <InfoTitle iconClass={\"mr-2\"} icon={faLock} title={\"Change Password\"} />\r\n            {successMessage && <Alert alertType={\"success\"} message={successMessage} />}\r\n            <form className=\"mt-5\" onSubmit={onFormSubmit}>\r\n                <Input\r\n                    title={\"Enter a new password\"}\r\n                    titleClass={\"col-sm-3\"}\r\n                    wrapperClass={\"col-sm-4\"}\r\n                    type={\"password\"}\r\n                    error={passwordError}\r\n                    name={\"password\"}\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <Input\r\n                    title={\"Confirm password\"}\r\n                    titleClass={\"col-sm-3\"}\r\n                    wrapperClass={\"col-sm-4\"}\r\n                    type={\"password\"}\r\n                    error={password2Error}\r\n                    name={\"password2\"}\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <IconButton buttonText={\"Change\"} icon={faUndo} iconClassName={\"mr-3\"} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}