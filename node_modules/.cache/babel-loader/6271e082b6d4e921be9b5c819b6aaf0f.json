{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../constants/urlConstants\";\n\nclass RequestService {\n  constructor() {\n    this.get = function (url) {\n      let isAuthRequired = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"application/json\";\n      return createRequest(\"GET\", url, null, isAuthRequired, contentType);\n    };\n\n    this.post = function (url, body) {\n      let isAuthRequired = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      let contentType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"application/json\";\n      return createRequest(\"POST\", url, body, isAuthRequired, contentType);\n    };\n\n    this.put = function (url, body) {\n      let isAuthRequired = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      let contentType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"application/json\";\n      return createRequest(\"PUT\", url, body, isAuthRequired, contentType);\n    };\n\n    this.delete = function (url) {\n      let isAuthRequired = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      let contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"application/json\";\n      return createRequest(\"DELETE\", url, null, isAuthRequired, contentType);\n    };\n  }\n\n}\n\nconst createRequest = (method, url, body, isAuthRequired, contentType) => {\n  return axios({\n    method: method,\n    url: API_BASE_URL + url,\n    data: body,\n    headers: setHeader(isAuthRequired, contentType)\n  });\n};\n\nconst setHeader = (isAuthRequired, contentType) => {\n  if (isAuthRequired) {\n    axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n\n  axios.defaults.headers.common[\"Content-Type\"] = contentType;\n};\n\nexport default new RequestService();","map":{"version":3,"names":["axios","API_BASE_URL","RequestService","get","url","isAuthRequired","contentType","createRequest","post","body","put","delete","method","data","headers","setHeader","defaults","common","localStorage","getItem"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/utils/request-service.tsx"],"sourcesContent":["import React from \"react\";\r\nimport axios, { Method } from \"axios\";\r\n\r\nimport { API_BASE_URL } from \"../constants/urlConstants\";\r\n\r\nclass RequestService {\r\n    get = (url: string, isAuthRequired: boolean = false, contentType: string = \"application/json\") => {\r\n        return createRequest(\"GET\", url, null, isAuthRequired, contentType);\r\n    };\r\n\r\n    post = (url: string, body: any, isAuthRequired: boolean = false, contentType: string = \"application/json\") => {\r\n        return createRequest(\"POST\", url, body, isAuthRequired, contentType);\r\n    };\r\n\r\n    put = (url: string, body: any, isAuthRequired: boolean = false, contentType: string = \"application/json\") => {\r\n        return createRequest(\"PUT\", url, body, isAuthRequired, contentType);\r\n    };\r\n\r\n    delete = (url: string, isAuthRequired: boolean = false, contentType: string = \"application/json\") => {\r\n        return createRequest(\"DELETE\", url, null, isAuthRequired, contentType);\r\n    };\r\n}\r\n\r\nconst createRequest = (method: Method, url: string, body: any, isAuthRequired: boolean, contentType: string) => {\r\n    return axios({\r\n        method: method,\r\n        url: API_BASE_URL + url,\r\n        data: body,\r\n        headers: setHeader(isAuthRequired, contentType)\r\n    });\r\n};\r\n\r\nconst setHeader = (isAuthRequired: boolean, contentType: string) => {\r\n    if (isAuthRequired) {\r\n        axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n    axios.defaults.headers.common[\"Content-Type\"] = contentType;\r\n};\r\n\r\nexport default new RequestService();\r\n"],"mappings":"AACA,OAAOA,KAAP,MAA8B,OAA9B;AAEA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,cAAN,CAAqB;EAAA;IAAA,KACjBC,GADiB,GACX,UAACC,GAAD,EAA4F;MAAA,IAA9EC,cAA8E,uEAApD,KAAoD;MAAA,IAA7CC,WAA6C,uEAAvB,kBAAuB;MAC9F,OAAOC,aAAa,CAAC,KAAD,EAAQH,GAAR,EAAa,IAAb,EAAmBC,cAAnB,EAAmCC,WAAnC,CAApB;IACH,CAHgB;;IAAA,KAKjBE,IALiB,GAKV,UAACJ,GAAD,EAAcK,IAAd,EAAuG;MAAA,IAA9EJ,cAA8E,uEAApD,KAAoD;MAAA,IAA7CC,WAA6C,uEAAvB,kBAAuB;MAC1G,OAAOC,aAAa,CAAC,MAAD,EAASH,GAAT,EAAcK,IAAd,EAAoBJ,cAApB,EAAoCC,WAApC,CAApB;IACH,CAPgB;;IAAA,KASjBI,GATiB,GASX,UAACN,GAAD,EAAcK,IAAd,EAAuG;MAAA,IAA9EJ,cAA8E,uEAApD,KAAoD;MAAA,IAA7CC,WAA6C,uEAAvB,kBAAuB;MACzG,OAAOC,aAAa,CAAC,KAAD,EAAQH,GAAR,EAAaK,IAAb,EAAmBJ,cAAnB,EAAmCC,WAAnC,CAApB;IACH,CAXgB;;IAAA,KAajBK,MAbiB,GAaR,UAACP,GAAD,EAA4F;MAAA,IAA9EC,cAA8E,uEAApD,KAAoD;MAAA,IAA7CC,WAA6C,uEAAvB,kBAAuB;MACjG,OAAOC,aAAa,CAAC,QAAD,EAAWH,GAAX,EAAgB,IAAhB,EAAsBC,cAAtB,EAAsCC,WAAtC,CAApB;IACH,CAfgB;EAAA;;AAAA;;AAkBrB,MAAMC,aAAa,GAAG,CAACK,MAAD,EAAiBR,GAAjB,EAA8BK,IAA9B,EAAyCJ,cAAzC,EAAkEC,WAAlE,KAA0F;EAC5G,OAAON,KAAK,CAAC;IACTY,MAAM,EAAEA,MADC;IAETR,GAAG,EAAEH,YAAY,GAAGG,GAFX;IAGTS,IAAI,EAAEJ,IAHG;IAITK,OAAO,EAAEC,SAAS,CAACV,cAAD,EAAiBC,WAAjB;EAJT,CAAD,CAAZ;AAMH,CAPD;;AASA,MAAMS,SAAS,GAAG,CAACV,cAAD,EAA0BC,WAA1B,KAAkD;EAChE,IAAID,cAAJ,EAAoB;IAChBL,KAAK,CAACgB,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,CAA8B,eAA9B,IAAiDC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjD;EACH,CAFD,MAEO;IACH,OAAOnB,KAAK,CAACgB,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,CAA8B,eAA9B,CAAP;EACH;;EACDjB,KAAK,CAACgB,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,CAA8B,cAA9B,IAAgDX,WAAhD;AACH,CAPD;;AASA,eAAe,IAAIJ,cAAJ,EAAf"},"metadata":{},"sourceType":"module"}