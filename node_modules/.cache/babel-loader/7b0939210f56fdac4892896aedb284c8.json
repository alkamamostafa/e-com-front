{"ast":null,"code":"import { LoadingStatus } from \"../../types/types\";\nimport { ACTIVATE_ACCOUNT_FAILURE, ACTIVATE_ACCOUNT_SUCCESS, FORGOT_PASSWORD_FAILURE, FORGOT_PASSWORD_SUCCESS, LOGIN_FAILURE, REGISTER_FAILURE, REGISTER_SUCCESS, RESET_AUTH_STATE, RESET_PASSWORD_CODE_FAILURE, RESET_PASSWORD_CODE_SUCCESS, RESET_PASSWORD_FAILURE, RESET_PASSWORD_SUCCESS, SET_AUTH_LOADING_STATE } from \"./auth-action-types\";\nconst initialState = {\n  email: \"\",\n  isRegistered: false,\n  loadingState: LoadingStatus.LOADING,\n  success: \"\",\n  error: \"\",\n  errors: {}\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_AUTH_LOADING_STATE:\n      return { ...state,\n        loadingState: action.payload,\n        errors: {}\n      };\n\n    case LOGIN_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        isRegistered: true,\n        loadingState: LoadingStatus.LOADED,\n        errors: {}\n      };\n\n    case REGISTER_FAILURE:\n      return { ...state,\n        errors: action.payload,\n        loadingState: LoadingStatus.LOADED\n      };\n\n    case ACTIVATE_ACCOUNT_SUCCESS:\n      return { ...state,\n        success: action.payload\n      };\n\n    case ACTIVATE_ACCOUNT_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    case FORGOT_PASSWORD_SUCCESS:\n      return { ...state,\n        success: action.payload,\n        loadingState: LoadingStatus.LOADED,\n        errors: {},\n        error: \"\"\n      };\n\n    case FORGOT_PASSWORD_FAILURE:\n      return { ...state,\n        error: action.payload,\n        loadingState: LoadingStatus.LOADED\n      };\n\n    case RESET_PASSWORD_CODE_SUCCESS:\n      return { ...state,\n        email: action.payload\n      };\n\n    case RESET_PASSWORD_CODE_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    case RESET_PASSWORD_SUCCESS:\n      return { ...state,\n        success: action.payload\n      };\n\n    case RESET_PASSWORD_FAILURE:\n      return { ...state,\n        errors: action.payload\n      };\n\n    case RESET_AUTH_STATE:\n      return { ...initialState,\n        loadingState: LoadingStatus.LOADED\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"names":["LoadingStatus","ACTIVATE_ACCOUNT_FAILURE","ACTIVATE_ACCOUNT_SUCCESS","FORGOT_PASSWORD_FAILURE","FORGOT_PASSWORD_SUCCESS","LOGIN_FAILURE","REGISTER_FAILURE","REGISTER_SUCCESS","RESET_AUTH_STATE","RESET_PASSWORD_CODE_FAILURE","RESET_PASSWORD_CODE_SUCCESS","RESET_PASSWORD_FAILURE","RESET_PASSWORD_SUCCESS","SET_AUTH_LOADING_STATE","initialState","email","isRegistered","loadingState","LOADING","success","error","errors","authReducer","state","action","type","payload","LOADED"],"sources":["C:/Users/ALKAMA/Desktop/commerce/ecommerce-spring-reactjs/frontend/src/redux/auth/auth-reducer.ts"],"sourcesContent":["import { AuthErrors, LoadingStatus } from \"../../types/types\";\r\nimport {\r\n    ACTIVATE_ACCOUNT_FAILURE,\r\n    ACTIVATE_ACCOUNT_SUCCESS,\r\n    AuthActionTypes,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    REGISTER_FAILURE,\r\n    REGISTER_SUCCESS,\r\n    RESET_AUTH_STATE,\r\n    RESET_PASSWORD_CODE_FAILURE,\r\n    RESET_PASSWORD_CODE_SUCCESS,\r\n    RESET_PASSWORD_FAILURE,\r\n    RESET_PASSWORD_SUCCESS,\r\n    SET_AUTH_LOADING_STATE\r\n} from \"./auth-action-types\";\r\n\r\nexport type AuthState = {\r\n    email: string;\r\n    isRegistered: boolean;\r\n    loadingState: LoadingStatus;\r\n    success: string;\r\n    error: string;\r\n    errors: Partial<AuthErrors>;\r\n};\r\n\r\nconst initialState: AuthState = {\r\n    email: \"\",\r\n    isRegistered: false,\r\n    loadingState: LoadingStatus.LOADING,\r\n    success: \"\",\r\n    error: \"\",\r\n    errors: {}\r\n};\r\n\r\nconst authReducer = (state: AuthState = initialState, action: AuthActionTypes): AuthState => {\r\n    switch (action.type) {\r\n        case SET_AUTH_LOADING_STATE:\r\n            return { ...state, loadingState: action.payload, errors: {} };\r\n\r\n        case LOGIN_FAILURE:\r\n            return { ...state, error: action.payload };\r\n\r\n        case REGISTER_SUCCESS:\r\n            return { ...state, isRegistered: true, loadingState: LoadingStatus.LOADED, errors: {} };\r\n\r\n        case REGISTER_FAILURE:\r\n            return { ...state, errors: action.payload, loadingState: LoadingStatus.LOADED };\r\n\r\n        case ACTIVATE_ACCOUNT_SUCCESS:\r\n            return { ...state, success: action.payload };\r\n\r\n        case ACTIVATE_ACCOUNT_FAILURE:\r\n            return { ...state, error: action.payload };\r\n\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return { ...state, success: action.payload, loadingState: LoadingStatus.LOADED, errors: {}, error: \"\" };\r\n\r\n        case FORGOT_PASSWORD_FAILURE:\r\n            return { ...state, error: action.payload, loadingState: LoadingStatus.LOADED };\r\n\r\n        case RESET_PASSWORD_CODE_SUCCESS:\r\n            return { ...state, email: action.payload };\r\n\r\n        case RESET_PASSWORD_CODE_FAILURE:\r\n            return { ...state, error: action.payload };\r\n\r\n        case RESET_PASSWORD_SUCCESS:\r\n            return { ...state, success: action.payload };\r\n\r\n        case RESET_PASSWORD_FAILURE:\r\n            return { ...state, errors: action.payload };\r\n\r\n        case RESET_AUTH_STATE:\r\n            return { ...initialState, loadingState: LoadingStatus.LOADED };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n"],"mappings":"AAAA,SAAqBA,aAArB,QAA0C,mBAA1C;AACA,SACIC,wBADJ,EAEIC,wBAFJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,aANJ,EAOIC,gBAPJ,EAQIC,gBARJ,EASIC,gBATJ,EAUIC,2BAVJ,EAWIC,2BAXJ,EAYIC,sBAZJ,EAaIC,sBAbJ,EAcIC,sBAdJ,QAeO,qBAfP;AA0BA,MAAMC,YAAuB,GAAG;EAC5BC,KAAK,EAAE,EADqB;EAE5BC,YAAY,EAAE,KAFc;EAG5BC,YAAY,EAAEjB,aAAa,CAACkB,OAHA;EAI5BC,OAAO,EAAE,EAJmB;EAK5BC,KAAK,EAAE,EALqB;EAM5BC,MAAM,EAAE;AANoB,CAAhC;;AASA,MAAMC,WAAW,GAAG,YAAyE;EAAA,IAAxEC,KAAwE,uEAArDT,YAAqD;EAAA,IAAvCU,MAAuC;;EACzF,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,sBAAL;MACI,OAAO,EAAE,GAAGU,KAAL;QAAYN,YAAY,EAAEO,MAAM,CAACE,OAAjC;QAA0CL,MAAM,EAAE;MAAlD,CAAP;;IAEJ,KAAKhB,aAAL;MACI,OAAO,EAAE,GAAGkB,KAAL;QAAYH,KAAK,EAAEI,MAAM,CAACE;MAA1B,CAAP;;IAEJ,KAAKnB,gBAAL;MACI,OAAO,EAAE,GAAGgB,KAAL;QAAYP,YAAY,EAAE,IAA1B;QAAgCC,YAAY,EAAEjB,aAAa,CAAC2B,MAA5D;QAAoEN,MAAM,EAAE;MAA5E,CAAP;;IAEJ,KAAKf,gBAAL;MACI,OAAO,EAAE,GAAGiB,KAAL;QAAYF,MAAM,EAAEG,MAAM,CAACE,OAA3B;QAAoCT,YAAY,EAAEjB,aAAa,CAAC2B;MAAhE,CAAP;;IAEJ,KAAKzB,wBAAL;MACI,OAAO,EAAE,GAAGqB,KAAL;QAAYJ,OAAO,EAAEK,MAAM,CAACE;MAA5B,CAAP;;IAEJ,KAAKzB,wBAAL;MACI,OAAO,EAAE,GAAGsB,KAAL;QAAYH,KAAK,EAAEI,MAAM,CAACE;MAA1B,CAAP;;IAEJ,KAAKtB,uBAAL;MACI,OAAO,EAAE,GAAGmB,KAAL;QAAYJ,OAAO,EAAEK,MAAM,CAACE,OAA5B;QAAqCT,YAAY,EAAEjB,aAAa,CAAC2B,MAAjE;QAAyEN,MAAM,EAAE,EAAjF;QAAqFD,KAAK,EAAE;MAA5F,CAAP;;IAEJ,KAAKjB,uBAAL;MACI,OAAO,EAAE,GAAGoB,KAAL;QAAYH,KAAK,EAAEI,MAAM,CAACE,OAA1B;QAAmCT,YAAY,EAAEjB,aAAa,CAAC2B;MAA/D,CAAP;;IAEJ,KAAKjB,2BAAL;MACI,OAAO,EAAE,GAAGa,KAAL;QAAYR,KAAK,EAAES,MAAM,CAACE;MAA1B,CAAP;;IAEJ,KAAKjB,2BAAL;MACI,OAAO,EAAE,GAAGc,KAAL;QAAYH,KAAK,EAAEI,MAAM,CAACE;MAA1B,CAAP;;IAEJ,KAAKd,sBAAL;MACI,OAAO,EAAE,GAAGW,KAAL;QAAYJ,OAAO,EAAEK,MAAM,CAACE;MAA5B,CAAP;;IAEJ,KAAKf,sBAAL;MACI,OAAO,EAAE,GAAGY,KAAL;QAAYF,MAAM,EAAEG,MAAM,CAACE;MAA3B,CAAP;;IAEJ,KAAKlB,gBAAL;MACI,OAAO,EAAE,GAAGM,YAAL;QAAmBG,YAAY,EAAEjB,aAAa,CAAC2B;MAA/C,CAAP;;IAEJ;MACI,OAAOJ,KAAP;EAzCR;AA2CH,CA5CD;;AA8CA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}